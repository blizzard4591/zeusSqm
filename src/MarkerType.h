#ifndef ZEUSSQM_SQM_MARKERTYPE_H_
#define ZEUSSQM_SQM_MARKERTYPE_H_

#include <QString>

enum class MarkerType {
	INVALID,
	
	BLUFOR_ANTIAIR,
	BLUFOR_ARMOR,
	BLUFOR_ARTILLERY,
	BLUFOR_HELICOPTER,
	BLUFOR_HQ,
	BLUFOR_INFANTRY,
	BLUFOR_INSTALLATION,
	BLUFOR_MAINTENANCE,
	BLUFOR_MECHANIZED,
	BLUFOR_MEDICAL,
	BLUFOR_MORTAR,
	BLUFOR_MOTORIZED,
	BLUFOR_NAVAL,
	BLUFOR_ORDNANCE,
	BLUFOR_PLANE,
	BLUFOR_RECON,
	BLUFOR_SERVICE,
	BLUFOR_SUPPORT,
	BLUFOR_UAV,
	BLUFOR_UNKNOWN,

	CIVILIAN_CAR,
	CIVILIAN_HELICOPTER,
	CIVILIAN_PLANE,
	CIVILIAN_SHIP,
	CIVILIAN_UNKNOWN,

	INDEPENDENT_ANTIAIR,
	INDEPENDENT_ARMOR,
	INDEPENDENT_ARTILLERY,
	INDEPENDENT_HELICOPTER,
	INDEPENDENT_HQ,
	INDEPENDENT_INFANTRY,
	INDEPENDENT_INSTALLATION,
	INDEPENDENT_MAINTENANCE,
	INDEPENDENT_MECHANIZED,
	INDEPENDENT_MEDICAL,
	INDEPENDENT_MORTAR,
	INDEPENDENT_MOTORIZED,
	INDEPENDENT_NAVAL,
	INDEPENDENT_ORDNANCE,
	INDEPENDENT_PLANE,
	INDEPENDENT_RECON,
	INDEPENDENT_SERVICE,
	INDEPENDENT_SUPPORT,
	INDEPENDENT_UAV,
	INDEPENDENT_UNKNOWN,

	OPFOR_ANTIAIR,
	OPFOR_ARMOR,
	OPFOR_ARTILLERY,
	OPFOR_HELICOPTER,
	OPFOR_HQ,
	OPFOR_INFANTRY,
	OPFOR_INSTALLATION,
	OPFOR_MAINTENANCE,
	OPFOR_MECHANIZED,
	OPFOR_MEDICAL,
	OPFOR_MORTAR,
	OPFOR_MOTORIZED,
	OPFOR_NAVAL,
	OPFOR_ORDNANCE,
	OPFOR_PLANE,
	OPFOR_RECON,
	OPFOR_SERVICE,
	OPFOR_SUPPORT,
	OPFOR_UAV,
	OPFOR_UNKNOWN
};

class MarkerTypeHelper {
public:
	static QString toString(MarkerType const& markerType);
	static QString toDisplayString(MarkerType const& markerType);
	static MarkerType fromString(QString const& marker);

	enum class Side {
		INVALID,
		BLUFOR, OPFOR, INDEPENDENT, CIVILIAN
	};
	static Side getSide(MarkerType const& markerType);
};

#endif
