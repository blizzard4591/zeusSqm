#include "version.h"


// The major version of ZeusSqm
const unsigned Version::versionMajor = @ZEUSSQM_CPP_VERSION_MAJOR@;

// The minor version of ZeusSqm
const unsigned Version::versionMinor = @ZEUSSQM_CPP_VERSION_MINOR@;

// The patch version of ZeusSqm
const unsigned Version::versionPatch = @ZEUSSQM_CPP_VERSION_PATCH@;

// The short hash of the git commit this build is based on
const std::string Version::gitRevisionHash = "@ZEUSSQM_CPP_VERSION_HASH@";

// How many commits passed since the last tag was set
const unsigned Version::commitsAhead = @ZEUSSQM_CPP_VERSION_COMMITS_AHEAD@;

// "0" iff no files were modified in the checkout, "1" else
const unsigned Version::dirty = @ZEUSSQM_CPP_VERSION_DIRTY@;

// The system which has compiled ZeusSqm
const std::string Version::systemName = "@CMAKE_SYSTEM_NAME@";

// The size of a pointer of the system that has compiled ZeusSqm
const std::string Version::systemPtrSize = "@ZEUSSQM_CPP_POINTER_SIZE@";

// The system version which has compiled ZeusSqm
const std::string Version::systemVersion = "@CMAKE_SYSTEM_VERSION@";

// The build type that was used to build ZeusSqm
#if (defined(_MSC_VER) && defined(_DEBUG))
const std::string Version::buildType = "Debug";
#elif (defined(_MSC_VER) && !defined(_DEBUG))
const std::string Version::buildType = "Release";
#else
const std::string Version::buildType = "@CMAKE_BUILD_TYPE@";
#endif

// The compiler version that was used to build ZeusSqm
const std::string Version::cxxCompiler = "@ZEUSSQM_COMPILED_BY@ @CMAKE_CXX_COMPILER_VERSION@";
